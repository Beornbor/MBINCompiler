using libMBIN.NMS.Toolkit;
using libMBIN.NMS.GameComponents;

namespace libMBIN.NMS.Globals
{
    [NMS( GUID = 0xD7AD6AC27F76443B )]
    public class GcUIGlobals : NMSTemplate
    {
        /* 0x0000 */ public bool LoadPagesFromMetadataCache;
        /* 0x0001 */ public bool AlwaysCloseQuickMenu;
        /* 0x0002 */ public bool UseWorldNodesForRepair;
        /* 0x0003 */ public bool RepairTechUseTechIcon;
        /* 0x0004 */ public bool DebugMissionLogText;
        /* 0x0005 */ public bool DebugShowMaintenanceScreenCentre;
        /* 0x0006 */ public bool DebugPopupSizes;
        /* 0x0007 */ public bool DebugInventoryIndices;
        /* 0x0008 */ public bool FixedInventoryIconPositions;
                     [NMS(Size = 0x07, Ignore = true)]
        /* 0x0009 */ public byte[] Padding9;
        /* 0x0010 */ public GcHUDEffectRewardData OSDRareItemRewardEffect;
        /* 0x0070 */ public GcHUDEffectRewardData OSDEpicItemRewardEffect;
        /* 0x00D0 */ public float OSDMessageQueueSpeedMultiplier;
        /* 0x00D4 */ public int OSDMessageQueueMin;
        /* 0x00D8 */ public int OSDMessageQueueMax;
        /* 0x00DC */ public float PopupValueSectionBaseHeight;
        /* 0x00E0 */ public float PopupValueSectionHeight;
                     [NMS(Size = 0x0C, Ignore = true)]
        /* 0x00E4 */ public byte[] PaddingE4;
        /* 0x00F0 */ public Colour ProcProductColourCommon;
        /* 0x0100 */ public Colour ProcProductColourUncommon;
        /* 0x0110 */ public Colour ProcProductColourRare;
                     [NMS(Size = 0x04)]
        /* 0x0120 */ public Vector2f[] InventoryIconPositions;
        /* 0x0140 */ public Colour PickedItemBorderColour;
        /* 0x0150 */ public Colour MultiplayerMissionParticipantsColour;
                     [NMS(Size = 0x10)]
        /* 0x0160 */ public string MultiplayerMissionInteractStartTrigger;
                     [NMS(Size = 0x10)]
        /* 0x0170 */ public string MultiplayerMissionInteractEndTrigger;
        /* 0x0180 */ public float NotificationHazardMinTimeAfterRecharge;
        /* 0x0184 */ public float LoadFadeInDefaultTime;
        /* 0x0188 */ public float DroneIndicatorRadius;
        /* 0x018C */ public float DroneIndicatorCentreRadiusMax;
        /* 0x0190 */ public float DroneIndicatorCentreRadiusMin;
        /* 0x0194 */ public float DroneIndicatorFadeRange;
        /* 0x0198 */ public float WantedDetectMessageTime;
        /* 0x019C */ public float WantedDetectMinTimeout;
        /* 0x01A0 */ public float TakeoffFuelMessageTime;
        /* 0x01A4 */ public float MarkerHorizonOffsetAngle;
        /* 0x01A8 */ public float MarkerHorizonMinOffset;
        /* 0x01AC */ public float MarkerHorizonApproachAngle;
        /* 0x01B0 */ public float MarkerOffsetTypeAngle;
        /* 0x01B4 */ public float MarkerOffsetTypeAngleBattle;
        /* 0x01B8 */ public float MarkerOffsetTypeAngleBounty;
        /* 0x01BC */ public float MarkerOffsetTypeAnglePlayerShip;
        /* 0x01C0 */ public float MarkerHorizonOffPlanetLightBeamAngle;
        /* 0x01C4 */ public float MarkerHorizonShipApproachOffset;
        /* 0x01C8 */ public float TransferPopupCursorOffsetFactor;
        /* 0x01CC */ public float ScannableIconMergeAngle;
        /* 0x01D0 */ public float MissionObjectiveBaseHeight;
        /* 0x01D4 */ public float MarkerTagAppearDelay;
        /* 0x01D8 */ public Vector2f CompassCentre;
        /* 0x01E0 */ public float CompassHeight;
        /* 0x01E4 */ public float CompassWidth;
        /* 0x01E8 */ public float CompassDistanceScaleMin;
        /* 0x01EC */ public float CompassDistanceScaleRange;
        /* 0x01F0 */ public float CompassDistanceScale;
        /* 0x01F4 */ public float CompassDistanceMaxAngle;
        /* 0x01F8 */ public float CompassDistanceYOffset;
        /* 0x01FC */ public float CompassAngleClamp;
        /* 0x0200 */ public float CompassAngleFade;
        /* 0x0204 */ public TkCurveType CompassCurve;
        /* 0x0208 */ public float BaseComplexityDangerFactor;
        /* 0x020C */ public float BaseComplexityWarningFactor;
        /* 0x0210 */ public Colour BaseComplexityDefaultColour;
        /* 0x0220 */ public Colour BaseComplexityWarningColour;
        /* 0x0230 */ public Colour BaseComplexityDangerColour;
        /* 0x0240 */ public float MarkerRingInnerRadius;
        /* 0x0244 */ public float MarkerRingOuterRadius;
                     [NMS(Size = 0x08, Ignore = true)]
        /* 0x0248 */ public byte[] Padding248;
        /* 0x0250 */ public Colour MarkerRingBGColour;
        /* 0x0260 */ public float RepairTechRepairedWaitTime1;
        /* 0x0264 */ public float RepairTechRepairedWaitTime2;
        /* 0x0268 */ public float RepairTechRepairedMessageTime;
        /* 0x026C */ public float TechPopupRepairLayerHeight;
        /* 0x0270 */ public float TechPopupBuildLayerHeight;
        /* 0x0274 */ public float TechPopupRequirementHeight;
        /* 0x0278 */ public float DamageTrackArrowTime;
        /* 0x027C */ public float HUDMarkerObjectMinScreenDistance;
        /* 0x0280 */ public float HUDMarkerDistanceOrTimeDistance;
        /* 0x0284 */ public float MarkerComponentOffset;
        /* 0x0288 */ public float RepairTechLabelOffset;
        /* 0x028C */ public float MaintenanceIconFadeStart;
        /* 0x0290 */ public float MaintenanceIconFadeTime;
                     [NMS(Size = 0x0C, Ignore = true)]
        /* 0x0294 */ public byte[] Padding294;
        /* 0x02A0 */ public TkModelRendererData RepairCamera;
        /* 0x0350 */ public TkModelRendererData RepairWeaponCamera;
        /* 0x0400 */ public TkModelRendererData RepairBackpackCamera;
        /* 0x04B0 */ public TkModelRendererData RepairShipCamera;
        /* 0x0560 */ public Vector2f BinocularsDiscoveryPos;
                     [NMS(Size = 0x08, Ignore = true)]
        /* 0x0568 */ public byte[] Padding568;
        /* 0x0570 */ public Colour InteractionLabelCostColour;
        /* 0x0580 */ public Colour InteractionLabelPickupColour;
        /* 0x0590 */ public Colour InteractionLabelPickupFillColour;
        /* 0x05A0 */ public float RefinerPadStartTime;
        /* 0x05A4 */ public float RefinerPadStartDecayTime;
        /* 0x05A8 */ public float RefinerBeginDialInnerRadius;
        /* 0x05AC */ public float RefinerProgressDialInnerRadius;
        /* 0x05B0 */ public Vector4f DefaultRefinerOffsetIn;
        /* 0x05C0 */ public Vector4f DefaultRefinerOffsetOut;
        /* 0x05D0 */ public Vector2f RefinerParallax;
        /* 0x05D8 */ public Vector2f ModelViewWorldParallax;
        /* 0x05E0 */ public Vector2f HUDPlayerSentinelPulseFreq;
        /* 0x05E8 */ public Vector2f HUDPlayerSentinelPulseSize;
        /* 0x05F0 */ public float HUDPlayerSentinelPulseWidth;
        /* 0x05F4 */ public float HUDPlayerSentinelRangeFactor;
        /* 0x05F8 */ public float HUDPlayerSentinelPulseScanFreq;
        /* 0x05FC */ public float HUDPlayerPhonePulseScanFreq;
        /* 0x0600 */ public float RefinerAutoCloseTime;
                     [NMS(Size = 0x0C, Ignore = true)]
        /* 0x0604 */ public byte[] Padding604;
        /* 0x0610 */ public Colour RefinerBackgroundColour;
        /* 0x0620 */ public Colour RefinerErrorBackgroundColour;
        /* 0x0630 */ public Colour TransferSendPopupColour;
        /* 0x0640 */ public float BountyMarkerOffset;
        /* 0x0644 */ public float TransitionOffset;
        /* 0x0648 */ public float PageTurnTime;
        /* 0x064C */ public TkCurveType PageTurnCurve;
        /* 0x0650 */ public TkCurveType PageTurnFadeCurve;
        /* 0x0654 */ public float LowHealthShieldMin;
        /* 0x0658 */ public float LowHealthShieldFactor;
        /* 0x065C */ public int MaxDialogCharSizeRoman;
                     [NMS(Size = 0x20)]
        /* 0x0660 */ public string MaxDialogCharSizeRomanString;
        /* 0x0680 */ public int MaxDialogCharSizeIdeographic;
                     [NMS(Size = 0x20)]
        /* 0x0684 */ public string MaxDialogCharSizeIdeographicString;
        /* 0x06A4 */ public float ShipOverheatSwitchMessageWait;
        /* 0x06A8 */ public float ShipOverheatSwitchMessageTime;
        /* 0x06AC */ public bool LeadTargetEnabled;
                     [NMS(Size = 0x03, Ignore = true)]
        /* 0x06AD */ public byte[] Padding6AD;
        /* 0x06B0 */ public Vector2f SaveIconPosition;
        /* 0x06B8 */ public float MissionStartEndTime;
        /* 0x06BC */ public float MissionStartEndOSDTime;
        /* 0x06C0 */ public float MissionStartEndOSDTimeProcedural;
        /* 0x06C4 */ public float StandingRewardOSDTime;
                     [NMS(Size = 0x08, Ignore = true)]
        /* 0x06C8 */ public byte[] Padding6C8;
        /* 0x06D0 */ public Colour MissionOSDMessageBarColour;
        /* 0x06E0 */ public Colour NotificationDefaultColour;
        /* 0x06F0 */ public Colour NotificationDangerColour;
        /* 0x0700 */ public Colour NotificationInfoColour;
        /* 0x0710 */ public Colour NotificationUrgentColour;
        /* 0x0720 */ public float ShipDamageDirectionIndicatorRadius;
        /* 0x0724 */ public float ShipDamageDirectionIndicatorFadeRange;
        /* 0x0728 */ public float OnFootDamageDirectionIndicatorRadius;
        /* 0x072C */ public float OnFootDamageDirectionIndicatorFadeRange;
        /* 0x0730 */ public float DamageDirectionIndicatorOnScreenRadiusMultiplier;
        /* 0x0734 */ public Vector2f DialogPageCursorOffset;
        /* 0x073C */ public int MissionSpecificMissionPercent;
        /* 0x0740 */ public int MissionLoopCount;
        /* 0x0744 */ public int MissionSeedOffset;
                     [NMS(Size = 0x08, Ignore = true)]
        /* 0x0748 */ public byte[] Padding748;
        /* 0x0750 */ public Vector4f SpaceMapCockpitOffset;
        /* 0x0760 */ public float SpaceMapCockpitScale;
        /* 0x0764 */ public float SpaceMapCockpitAngle;
        /* 0x0768 */ public float TargetDisplayScale;
        /* 0x076C */ public float TargetDisplayShipScale;
        /* 0x0770 */ public Vector4f TargetDisplayShipOffset;
        /* 0x0780 */ public float TargetDisplayDamageFlashTime;
                     [NMS(Size = 0x0C, Ignore = true)]
        /* 0x0784 */ public byte[] Padding784;
        /* 0x0790 */ public GcScanEffectData TargetDisplayScanEffect;
        /* 0x07E0 */ public bool ProgressiveDialogStyle;
                     [NMS(Size = 0x03, Ignore = true)]
        /* 0x07E1 */ public byte[] Padding7E1;
        /* 0x07E4 */ public float CommunicatorMessageTime;
                     [NMS(Size = 0x08, Ignore = true)]
        /* 0x07E8 */ public byte[] Padding7E8;
        /* 0x07F0 */ public Colour CommunicatorMessageColour;
        /* 0x0800 */ public float GridFlickerBaseAlpha;
        /* 0x0804 */ public float GridFlickerFreq;
        /* 0x0808 */ public float GridFlickerAmp;
        /* 0x080C */ public float HUDMarkerLabelWidthMultiplier;
        /* 0x0810 */ public float HUDMarkerLabelBaseWidth;
        /* 0x0814 */ public float HUDMarkerLabelArriveDistance;
        /* 0x0818 */ public float HUDMarkerLabelDisplayDistance;
        /* 0x081C */ public float HUDMarkerNonActiveMissionAlpha;
        /* 0x0820 */ public bool DebugMarkerLabels;
                     [NMS(Size = 0x0F, Ignore = true)]
        /* 0x0821 */ public byte[] Padding821;
        /* 0x0830 */ public GcScanEffectData DebugEditorPreviewEffect;
        /* 0x0880 */ public bool ShowDamageNumbers;
                     [NMS(Size = 0x03, Ignore = true)]
        /* 0x0881 */ public byte[] Padding881;
        /* 0x0884 */ public float QuickMenuCloseTime;
        /* 0x0888 */ public float QuickMenuErrorTime;
        /* 0x088C */ public float FrontendWaitResponse;
        /* 0x0890 */ public float FrontendWaitInitial;
        /* 0x0894 */ public float FrontendWaitInitialTerminal;
        /* 0x0898 */ public float FrontendWaitFadeTextOut;
        /* 0x089C */ public float FrontendWaitFadeTextFrameOut;
        /* 0x08A0 */ public float FrontendWaitFadeProgressiveDialogOut;
        /* 0x08A4 */ public float FrontendWaitResponseOffset;
        /* 0x08A8 */ public float TalkBoxAlienTextSpeed;
        /* 0x08AC */ public float TalkBoxAlienTextTimeMin;
        /* 0x08B0 */ public float TalkBoxAlienTextTimeMax;
        /* 0x08B4 */ public float DescriptionTextDelay;
        /* 0x08B8 */ public float DescriptionTextSpeed;
        /* 0x08BC */ public float DescriptionTextSpeedProgressive;
        /* 0x08C0 */ public float DescriptionTextTimeMin;
        /* 0x08C4 */ public float DescriptionTextTimeMax;
        /* 0x08C8 */ public float ConsoleTextSpeed;
        /* 0x08CC */ public float ConsoleTextTimeMin;
        /* 0x08D0 */ public float ConsoleTextTimeMax;
        /* 0x08D4 */ public float HoverOffscreenBorder;
        /* 0x08D8 */ public float TransferSendOffscreenBorder;
        /* 0x08DC */ public float TimedEventLookTime;
        /* 0x08E0 */ public float DamageImpactMergeTime;
        /* 0x08E4 */ public float DamageImpactTimeBetweenNumbers;
        /* 0x08E8 */ public float DamageImpactMinDistance;
        /* 0x08EC */ public float DamagePerSecondSampleTime;
        /* 0x08F0 */ public float DamageNumberTime;
        /* 0x08F4 */ public float DamageNumberSizeInShip;
        /* 0x08F8 */ public float DamageNumberSize;
        /* 0x08FC */ public float DamageNumberSizeCritMultiplier;
        /* 0x0900 */ public float DamageNumberBlackAlpha;
        /* 0x0904 */ public float DamageNumberOutline;
        /* 0x0908 */ public float DamageNumberOutline2;
        /* 0x090C */ public float DamageNumberOffsetX;
        /* 0x0910 */ public float DamageNumberOffsetY;
        /* 0x0914 */ public Vector2f DamageNumberSideSpeed;
        /* 0x091C */ public float DamageNumberFadeIn;
        /* 0x0920 */ public float DamageNumberFadeOut;
        /* 0x0924 */ public float DamageNumberUpOffset;
        /* 0x0928 */ public TkCurveType DamageNumberUpCurve;
                     [NMS(Size = 0x04, Ignore = true)]
        /* 0x092C */ public byte[] Padding92C;
        /* 0x0930 */ public Colour DamageNumberCriticalColour;
        /* 0x0940 */ public Colour DamageNumberIneffectiveColour;
        /* 0x0950 */ public Colour PhotoModeSelectedColour;
        /* 0x0960 */ public Colour PhotoModeUnselectedColour;
        /* 0x0970 */ public Colour FuelBgColour;
        /* 0x0980 */ public float PhotoModeValueAlpha;
        /* 0x0984 */ public float PhotoModeTimeofDayChange;
        /* 0x0988 */ public float FrigateIconOffset;
        /* 0x098C */ public float DelayBeforeHidingHangarAfterGalaxyMap;
        /* 0x0990 */ public float DelayBeforeShowingHangarIntoGalaxyMap;
        /* 0x0994 */ public float FreighterSummonTurn;
        /* 0x0998 */ public float FreighterSummonPitch;
        /* 0x099C */ public float FreighterSummonOffset;
        /* 0x09A0 */ public float FreighterSummonDelay;
        /* 0x09A4 */ public int FreighterSummonTurnNumTries;
        /* 0x09A8 */ public float FreighterSummonTurnAngleIncrement;
        /* 0x09AC */ public float FreighterSummonGridSize;
        /* 0x09B0 */ public float FreighterCommanderMarkerMinDistance;
        /* 0x09B4 */ public float FreighterBaseIconOffset;
        /* 0x09B8 */ public float FreighterSurfaceMinAngle;
        /* 0x09BC */ public float FreighterSummonPulseRate;
        /* 0x09C0 */ public float FreighterSummonPulseFadeAmount;
        /* 0x09C4 */ public float FreighterSummonPlanetOffset;
        /* 0x09C8 */ public float FreighterSummonLookTime;
        /* 0x09CC */ public float FreighterHighlightRange;
        /* 0x09D0 */ public GcScanEffectData FreighterSummonScanEffect;
        /* 0x0A20 */ public Colour FreighterSummonScanEffectColourBlocked;
        /* 0x0A30 */ public Colour FreighterSummonScanEffectColourHighlight;
        /* 0x0A40 */ public float PirateCountdownTime;
        /* 0x0A44 */ public float PirateAttackIndicatorWidth;
        /* 0x0A48 */ public float PirateAttackIndicatorRadius;
        /* 0x0A4C */ public float PirateAttackProbeDisplayFinishFactor;
        /* 0x0A50 */ public float HazardArrowsLevel2Threshold;
        /* 0x0A54 */ public float HazardArrowsLevel3Threshold;
        /* 0x0A58 */ public float ArrowBounceLength;
        /* 0x0A5C */ public float ArrowBounceRate;
        /* 0x0A60 */ public float ArrowBounceRightRate1;
        /* 0x0A64 */ public float ArrowBounceRightRate2;
        /* 0x0A68 */ public TkCurveType ArrowBounceRightCurve;
        /* 0x0A6C */ public float ArrowBounceLeftRate1;
        /* 0x0A70 */ public float ArrowBounceLeftRate2;
        /* 0x0A74 */ public float ArrowBounceLeftRate3;
        /* 0x0A78 */ public TkCurveType ArrowBounceLeftCurve;
        /* 0x0A7C */ public float PlanetScanDelayTime;
        /* 0x0A80 */ public float AlwaysShowIconFadeDistance;
        /* 0x0A84 */ public float AlwaysShowIconFadeRange;
        /* 0x0A88 */ public float FrigatePurchaseNotificationResetDistanceMultiplier;
        /* 0x0A8C */ public float FrigateDamageIconVisibilityDistance;
        /* 0x0A90 */ public float FreighterLeaderIconDistance;
        /* 0x0A94 */ public float FreighterEntranceOffset;
        /* 0x0A98 */ public float ShipHeadsUpDisplayDistance;
        /* 0x0A9C */ public float ShipHeadsUpLineFadeTime;
        /* 0x0AA0 */ public float CrosshairAimTime;
        /* 0x0AA4 */ public float CrosshairAimOffTime;
        /* 0x0AA8 */ public float CrosshairInnerMinFade;
        /* 0x0AAC */ public float CrosshairInnerMinFadeRange;
        /* 0x0AB0 */ public float CrosshairLeadScaleIn;
        /* 0x0AB4 */ public float CrosshairLeadInDelay;
        /* 0x0AB8 */ public float CrosshairLeadInTime;
        /* 0x0ABC */ public float CrosshairLeadCornerOffset;
        /* 0x0AC0 */ public float CrosshairLeadTopOffset;
        /* 0x0AC4 */ public float CrosshairLeadTopLock;
        /* 0x0AC8 */ public float CrosshairLeadPulseSize;
        /* 0x0ACC */ public TkCurveType CrosshairLeadScaleCurve;
        /* 0x0AD0 */ public float CrosshairSpringTime;
        /* 0x0AD4 */ public float CrosshairSpringAimTime;
        /* 0x0AD8 */ public float CrosshairLeadSpring;
        /* 0x0ADC */ public float CrosshairLeadSpringOff;
        /* 0x0AE0 */ public float CrosshairLeadFadeRange;
        /* 0x0AE4 */ public float CrosshairLeadFadeSize;
                     [NMS(Size = 0x08, Ignore = true)]
        /* 0x0AE8 */ public byte[] PaddingAE8;
        /* 0x0AF0 */ public Colour CrosshairLeadThreatColour;
        /* 0x0B00 */ public Colour CrosshairLeadPassiveColour;
        /* 0x0B10 */ public float CrosshairInterceptSize;
        /* 0x0B14 */ public float CrosshairInterceptBaseSize;
        /* 0x0B18 */ public float CrosshairInterceptCentreBaseSize;
        /* 0x0B1C */ public float CrosshairInterceptSpringTime;
        /* 0x0B20 */ public float CrosshairInterceptAlpha;
        /* 0x0B24 */ public float CrosshairInterceptLockRange;
        /* 0x0B28 */ public float CrosshairTargetLockSize;
        /* 0x0B2C */ public TkCurveType CrosshairTargetLockCurve;
        /* 0x0B30 */ public TkCurveType CrosshairTargetLockAlphaCurve;
                     [NMS(Size = 0x0C, Ignore = true)]
        /* 0x0B34 */ public byte[] PaddingB34;
        /* 0x0B40 */ public Colour CrosshairColour;
        /* 0x0B50 */ public TkHitCurveData CrosshairLeadHitCurve;
        /* 0x0B60 */ public TkHitCurveData ShootableHitCurve;
        /* 0x0B70 */ public int ControlScrollSteps;
        /* 0x0B74 */ public float ControlScrollDistance;
                     [NMS(Size = 0x08, Ignore = true)]
        /* 0x0B78 */ public byte[] PaddingB78;
        /* 0x0B80 */ public Colour SelectedControlColour;
        /* 0x0B90 */ public Colour RemappedControlColour;
        /* 0x0BA0 */ public float CreatureRoutineMarkerTime;
        /* 0x0BA4 */ public int CreatureRoutineRegionsPerFrame;
        /* 0x0BA8 */ public float SpaceMarkersOffset;
        /* 0x0BAC */ public float SpaceMarkersBattleOffset;
        /* 0x0BB0 */ public float LargeSpaceIconSize;
        /* 0x0BB4 */ public float SmallSpaceIconSize;
        /* 0x0BB8 */ public Vector2f TrackTypeIconOffset;
        /* 0x0BC0 */ public float TrackTypeIconSize;
        /* 0x0BC4 */ public float TrackPrimaryCentreOffset;
        /* 0x0BC8 */ public float TrackTimerAlpha;
        /* 0x0BCC */ public float TrackTimerRadarPulseSize;
        /* 0x0BD0 */ public float TrackTimerIconOuterRadius;
        /* 0x0BD4 */ public float TrackTimerIconInnerRadius;
        /* 0x0BD8 */ public float TrackTimerIconExclaimRadius;
        /* 0x0BDC */ public float TrackGlowBase;
        /* 0x0BE0 */ public float TrackHitPulseTime;
        /* 0x0BE4 */ public float TrackGlowCritical;
        /* 0x0BE8 */ public float TrackGlowHit;
        /* 0x0BEC */ public float MissileCentreOffset;
        /* 0x0BF0 */ public float TrackMissileTargetPulseRate;
        /* 0x0BF4 */ public float TrackScaleCritical;
        /* 0x0BF8 */ public float TrackScaleHit;
        /* 0x0BFC */ public float TrackLeadTargetInScale;
        /* 0x0C00 */ public float TrackReticuleScale;
        /* 0x0C04 */ public float TrackReticuleAngle;
        /* 0x0C08 */ public float TrackReticuleInTime;
        /* 0x0C0C */ public float TrackReticuleInactiveTime;
        /* 0x0C10 */ public float TrackReticuleRandomTime;
        /* 0x0C14 */ public float TrackReticuleRandomDelay;
        /* 0x0C18 */ public TkCurveType TrackReticuleInCurve;
        /* 0x0C1C */ public TkCurveType TrackReticuleInAngleCurve;
        /* 0x0C20 */ public float CreatureReticuleScale;
        /* 0x0C24 */ public TkCurveType CreatureReticuleScaleCurve;
        /* 0x0C28 */ public TkCurveType CreatureReticuleAlphaCurve;
        /* 0x0C2C */ public float HUDPlayerTrackNoSightPulse;
        /* 0x0C30 */ public float HUDPlayerTrackTimerStart;
        /* 0x0C34 */ public float HUDPlayerTrackTimerStartFade;
        /* 0x0C38 */ public float HUDPlayerTrackTimerEnd;
        /* 0x0C3C */ public float HUDPlayerTrackTimerPulseRate;
        /* 0x0C40 */ public TkCurveType TrackCritCurve;
        /* 0x0C44 */ public Vector2f TrackCriticalHitOffset;
        /* 0x0C4C */ public float TrackCriticalHitSize;
        /* 0x0C50 */ public float TrackCriticalPulseTime;
        /* 0x0C54 */ public float ThirdPersonCrosshairDistance;
        /* 0x0C58 */ public float ThirdPersonCrosshairCircle1Distance;
        /* 0x0C5C */ public float ThirdPersonCrosshairCircle2Distance;
        /* 0x0C60 */ public float HUDPlayerTrackArrowShipLabelOffset;
        /* 0x0C64 */ public float HUDPlayerTrackArrowIconPulseTime;
        /* 0x0C68 */ public float HUDPlayerTrackArrowIconShowTime;
        /* 0x0C6C */ public float HUDPlayerTrackArrowIconFadeTime;
        /* 0x0C70 */ public Vector2f HUDPlayerTrackArrowIconPulseSize;
        /* 0x0C78 */ public float HUDPlayerTrackArrowIconPulseWidth1;
        /* 0x0C7C */ public float HUDPlayerTrackArrowIconPulseWidth2;
        /* 0x0C80 */ public float HUDPlayerTrackArrowIconPulse2Alpha;
        /* 0x0C84 */ public float HUDPlayerTrackArrowIconFadeDist;
        /* 0x0C88 */ public float HUDPlayerTrackArrowIconFadeRange;
        /* 0x0C8C */ public float HUDPlayerTrackArrowPulseOffset;
        /* 0x0C90 */ public float HUDPlayerTrackArrowPulseRate;
        /* 0x0C94 */ public Vector2f HUDPlayerTrackIconOffset;
        /* 0x0C9C */ public float ShipFullscreenDamper;
        /* 0x0CA0 */ public float ShipDesatDamper;
        /* 0x0CA4 */ public float ScanEventArrowShipFadeRange;
        /* 0x0CA8 */ public float ScanEventArrowShipFadeDistance;
        /* 0x0CAC */ public float ScanEventArrowPlayerFadeRange;
        /* 0x0CB0 */ public float ScanEventArrowPlayerFadeDistance;
        /* 0x0CB4 */ public float ScanEventArrowOffsetMultiplier;
        /* 0x0CB8 */ public float ScanEventArrowOffsetMultiplierOneEvent;
        /* 0x0CBC */ public float ScanEventArrowSecondaryAlpha;
        /* 0x0CC0 */ public GcAudioWwiseEvents ScanEventIconAudio;
        /* 0x0CC4 */ public TkNGuiRectanglePulseEffect PulseBarData;
        /* 0x0CD8 */ public TkNGuiRectanglePulseEffect PulseIconData;
                     [NMS(Size = 0x04, Ignore = true)]
        /* 0x0CEC */ public byte[] PaddingCEC;
        /* 0x0CF0 */ public Colour PulseDamageColour;
        /* 0x0D00 */ public Colour PulseAlertColour;
        /* 0x0D10 */ public float TechDisplayDelayTime;
        /* 0x0D14 */ public float CriticalMessageTime;
        /* 0x0D18 */ public int NumDeathQuotes;
        /* 0x0D1C */ public bool EnableKanaConversion;
                     [NMS(Size = 0x03, Ignore = true)]
        /* 0x0D1D */ public byte[] PaddingD1D;
        /* 0x0D20 */ public float HUDDisplayTime;
        /* 0x0D24 */ public float HUDPlayerTrackDangerPulse;
        /* 0x0D28 */ public float HUDPlayerTrackArrowTextOffset;
        /* 0x0D2C */ public float HUDPlayerTrackArrowTextHeight;
        /* 0x0D30 */ public Colour HUDPlayerTrackArrowTextColour;
        /* 0x0D40 */ public float HUDPlayerTrackArrowHealthOffset;
        /* 0x0D44 */ public Vector2f HUDPlayerTrackArrowHealthSize;
        /* 0x0D4C */ public float HUDPlayerTrackArrowHealthGlowOffset;
        /* 0x0D50 */ public Vector2f HUDPlayerTrackArrowHealthGlowSize;
        /* 0x0D58 */ public float HUDPlayerTrackArrowTargetDist;
        /* 0x0D5C */ public float HUDPlayerTrackArrowOffset;
        /* 0x0D60 */ public float HUDPlayerTrackArrowScreenBorder;
        /* 0x0D64 */ public float HUDPlayerTrackArrowSize;
        /* 0x0D68 */ public float HUDPlayerTrackArrowSizeMin;
        /* 0x0D6C */ public float HUDPlayerTrackArrowSizeMax;
        /* 0x0D70 */ public float HUDPlayerTrackArrowIconSize;
        /* 0x0D74 */ public float HUDPlayerTrackArrowArrowSize;
        /* 0x0D78 */ public float HUDPlayerTrackArrowDotSize;
                     [NMS(Size = 0x04, Ignore = true)]
        /* 0x0D7C */ public byte[] PaddingD7C;
        /* 0x0D80 */ public Colour HUDPlayerTrackArrowDotColour;
        /* 0x0D90 */ public Colour HUDPlayerTrackArrowDotColourPolice;
        /* 0x0DA0 */ public Colour HUDPlayerTrackArrowDotColourPirate;
        /* 0x0DB0 */ public Colour HUDWarningColour;
        /* 0x0DC0 */ public Colour HUDNotifyColour;
        /* 0x0DD0 */ public float HUDPlayerTrackArrowMinFadeDist;
        /* 0x0DD4 */ public float HUDPlayerTrackArrowFadeRange;
        /* 0x0DD8 */ public float IconBackgroundAlpha;
        /* 0x0DDC */ public float WantedLevelWitnessPulseRate;
        /* 0x0DE0 */ public float WantedLevelWitnessOffset;
        /* 0x0DE4 */ public float WantedLevelTimeoutPulseRate;
        /* 0x0DE8 */ public float WantedLevelWitnessAlpha;
        /* 0x0DEC */ public float WantedLevelScanAlpha;
        /* 0x0DF0 */ public float WantedLevelScannedRate;
                     [NMS(Size = 0x37)]
        /* 0x0DF4 */ public NMSString0x80[] StatIcons;
        /* 0x2974 */ public bool ShowJetpackNotificationForNonTerrain;
                     [NMS(Size = 0x03, Ignore = true)]
        /* 0x2975 */ public byte[] Padding2975;
        /* 0x2978 */ public float StatsMessageDelayTime;
        /* 0x297C */ public int NotificationsResourceExtractHintCount;
        /* 0x2980 */ public float NotificationStaminaHintDistanceWalked;
        /* 0x2984 */ public float NotificationMinVisibleTime;
        /* 0x2988 */ public float NotificationHazardSafeThreshold;
        /* 0x298C */ public float NotificationHazardTimer;
        /* 0x2990 */ public float NotificationInteractHintStartTime;
        /* 0x2994 */ public float NotificationBuildHintStartTime;
        /* 0x2998 */ public float NotificationJetpackTime;
        /* 0x299C */ public float NotificationShieldTime;
        /* 0x29A0 */ public float NotificationShipBoostTime;
        /* 0x29A4 */ public float NotificationCantFireTime;
        /* 0x29A8 */ public float NotificationDangerTime;
        /* 0x29AC */ public float NotificationScanTime;
        /* 0x29B0 */ public float NotificationScanTimeCutoff;
        /* 0x29B4 */ public float NotificationMessageCycleTime;
        /* 0x29B8 */ public float NotificationMaxPageHintTime;
        /* 0x29BC */ public float NotificationShipJumpMinTime;
        /* 0x29C0 */ public float NotificationShipJumpReminderTime;
        /* 0x29C4 */ public float NotificationShipJumpReminderTutorial;
        /* 0x29C8 */ public float NotificationShipBoostMinTime;
        /* 0x29CC */ public float NotificationShipBoostReminderTime;
        /* 0x29D0 */ public float NotificationShipBoostReminderTimeTutorial;
        /* 0x29D4 */ public float LandNotifySpeedThreshold;
        /* 0x29D8 */ public float LandNotifyHeightThreshold;
        /* 0x29DC */ public float NotificationTimeBeforeHeridiumMarker;
        /* 0x29E0 */ public float NotificationUrgentMessageTime;
        /* 0x29E4 */ public float NotificationGoToSpaceStationWait;
        /* 0x29E8 */ public float NotificationMonolithMissionWait;
        /* 0x29EC */ public float NotificationFinalMissionWait;
        /* 0x29F0 */ public float NotificationWaypointReachDistance;
        /* 0x29F4 */ public float NotificationBridgeReachDistance;
        /* 0x29F8 */ public float NotificationDiscoveryIdleTime;
        /* 0x29FC */ public float NotificationInfoIdleTime;
        /* 0x2A00 */ public float NotificationNewTechIdleTime;
        /* 0x2A04 */ public float NotificationScanEventMissionIdleTime;
        /* 0x2A08 */ public float NotificationDeviceIdleTime;
        /* 0x2A0C */ public float NotificationMissionHintTime;
        /* 0x2A10 */ public float NotificationMissionHintTimeCritical;
        /* 0x2A14 */ public float NotificationMissionHintTimeSecondary;
        /* 0x2A18 */ public Vector2f NotificationMissionHintPauseTime;
        /* 0x2A20 */ public Vector2f NotificationMissionHintPauseTimeCritical;
        /* 0x2A28 */ public Vector2f NotificationMissionHintPauseTimeSecondary;
        /* 0x2A30 */ public float TooltipTime;
        /* 0x2A34 */ public float InventoryIconTime;
        /* 0x2A38 */ public float MessageNotificationTime;
        /* 0x2A3C */ public float MessageTimeQuick;
        /* 0x2A40 */ public float DeathMessageSwitchTime;
        /* 0x2A44 */ public float DeathMessageTotalTime;
                     [NMS(Size = 0x08, Ignore = true)]
        /* 0x2A48 */ public byte[] Padding2A48;
        /* 0x2A50 */ public Colour DeathMessageColour;
        /* 0x2A60 */ public Colour PinnedRecipeBorder;
                     [NMS(Size = 0x20)]
        /* 0x2A70 */ public string DistanceUnitM;
                     [NMS(Size = 0x20)]
        /* 0x2A90 */ public string DistanceUnitKM;
                     [NMS(Size = 0x20)]
        /* 0x2AB0 */ public string DistanceUnitMpS;
        /* 0x2AD0 */ public float ZoomHUDElementsOffsetX;
        /* 0x2AD4 */ public float ZoomHUDElementsOffsetY;
        /* 0x2AD8 */ public float ZoomHUDElementTime;
        /* 0x2ADC */ public float HUDElementsOffsetX_0;
        /* 0x2AE0 */ public float HUDElementsOffsetY_0;
        /* 0x2AE4 */ public float HUDElementsOffsetX_1;
        /* 0x2AE8 */ public float HUDElementsOffsetY_1;
        /* 0x2AEC */ public float HUDElementsOffsetX_2;
        /* 0x2AF0 */ public float HUDElementsOffsetY_2;
        /* 0x2AF4 */ public float HUDElementsOffsetX_3;
        /* 0x2AF8 */ public float HUDElementsOffsetY_3;
        /* 0x2AFC */ public float HUDElementsOffsetX_4;
        /* 0x2B00 */ public float HUDElementsOffsetY_4;
        /* 0x2B04 */ public float HUDElementsOffsetX_5;
        /* 0x2B08 */ public float HUDElementsOffsetY_5;
        /* 0x2B0C */ public Vector2f PlanetLabelOffset;
        /* 0x2B14 */ public Vector2f PlanetMeasureOffset;
        /* 0x2B1C */ public Vector2f PlanetLineOffset;
        /* 0x2B24 */ public float PlanetLabelTime;
        /* 0x2B28 */ public float PlanetLabelAngle;
                     [NMS(Size = 0x04, Ignore = true)]
        /* 0x2B2C */ public byte[] Padding2B2C;
        /* 0x2B30 */ public Colour ItemSlotColourSubstance;
        /* 0x2B40 */ public Colour ItemSlotColourTech;
        /* 0x2B50 */ public Colour ItemSlotColourTechCharge;
        /* 0x2B60 */ public Colour ItemSlotColourTechDamage;
        /* 0x2B70 */ public float ItemSlotColourTechChargeRate;
                     [NMS(Size = 0x0C, Ignore = true)]
        /* 0x2B74 */ public byte[] Padding2B74;
        /* 0x2B80 */ public Colour ItemSlotColourProduct;
        /* 0x2B90 */ public Colour ItemSlotTextColourSubstance;
        /* 0x2BA0 */ public Colour ItemSlotTextColourTech;
        /* 0x2BB0 */ public Colour ItemSlotTextColourProduct;
        /* 0x2BC0 */ public float InteractionScanScanTime;
        /* 0x2BC4 */ public float InteractionScanMinTime;
        /* 0x2BC8 */ public float InteractionScanDisplayTime;
        /* 0x2BCC */ public float InteractionScanSlapTime;
        /* 0x2BD0 */ public float InteractionScanSlapScale;
        /* 0x2BD4 */ public float InteractionScanSlapOverallTime;
        /* 0x2BD8 */ public TkCurveType InteractionScanSlapCurve;
        /* 0x2BDC */ public float ShipHUDMissileLockSizeMin;
        /* 0x2BE0 */ public float ShipHUDMissileLockSizeMax;
        /* 0x2BE4 */ public float ShipHUDMissileLockSpringSlow;
        /* 0x2BE8 */ public float ShipHUDMissileLockSpringFast;
        /* 0x2BEC */ public float ShipHUDMaxOffscreenTargetDist;
        /* 0x2BF0 */ public float ShipHUDTargetRadius;
        /* 0x2BF4 */ public float ShipHUDTargetTriangleRadius;
        /* 0x2BF8 */ public float ShipHUDTargetAlpha;
        /* 0x2BFC */ public float ShipHUDTargetArrowLength;
        /* 0x2C00 */ public float ShipHUDTargetMinDist;
        /* 0x2C04 */ public float ShipHUDTargetRange;
        /* 0x2C08 */ public float ShipHUDTargetScale;
        /* 0x2C0C */ public float ShipHUDTargetArrowsRotationRate;
        /* 0x2C10 */ public Colour ShipHUDTargetArrowsColourOutOfRange;
        /* 0x2C20 */ public Colour ShipHUDTargetArrowsColourThreat;
        /* 0x2C30 */ public Colour ShipHUDTargetArrowsColourLocal;
                     [NMS(Size = 0x04)]
        /* 0x2C40 */ public Colour[] ShipHUDTargetArrowsColour;
        /* 0x2C80 */ public Colour ShipHUDAimTargetColour;
        /* 0x2C90 */ public Colour ShipHUDAimTargetCritColour;
        /* 0x2CA0 */ public float ShipHUDHitPointTime;
        /* 0x2CA4 */ public float ShipHUDHitPointSize;
        /* 0x2CA8 */ public float TargetScreenFoV;
        /* 0x2CAC */ public float TargetScreenDistance;
        /* 0x2CB0 */ public Vector2f TargetScreenCamOffset;
        /* 0x2CB8 */ public float InventoryFullMessageRepeatTime;
        /* 0x2CBC */ public float HoldTimerResetTime;
        /* 0x2CC0 */ public bool ModelRendererBGPass;
        /* 0x2CC1 */ public bool ModelRendererPass1;
        /* 0x2CC2 */ public bool ModelRendererPass2;
                     [NMS(Size = 0x20)]
        /* 0x2CC3 */ public string HUDTimeSunrise;
                     [NMS(Size = 0x20)]
        /* 0x2CE3 */ public string HUDTimeSunset;
                     [NMS(Size = 0x01, Ignore = true)]
        /* 0x2D03 */ public byte[] Padding2D03;
        /* 0x2D04 */ public float HeatSpringTime;
        /* 0x2D08 */ public float HeatAlertTime;
        /* 0x2D0C */ public float HeatAlertFixedTime;
        /* 0x2D10 */ public float HeatAlertSpringTime;
        /* 0x2D14 */ public float HazardScreenEffectPulseRate;
        /* 0x2D18 */ public float KeepHazardBarActiveTime;
        /* 0x2D1C */ public float KeepSecondHazardBarActiveTime;
        /* 0x2D20 */ public float HazardBarPulseTime;
        /* 0x2D24 */ public float HazardScreenEffectPulseTime;
        /* 0x2D28 */ public float HazardScreenEffectStrength;
        /* 0x2D2C */ public float ShieldSpringTime;
        /* 0x2D30 */ public float ShieldPulseTime;
        /* 0x2D34 */ public float ShieldHazardPulseRate;
        /* 0x2D38 */ public float ShieldHazardPulseThreshold;
        /* 0x2D3C */ public float AlwaysOnHazardThreshold;
        /* 0x2D40 */ public float AlwaysOnHazardStrengthTox;
        /* 0x2D44 */ public float AlwaysOnHazardStrengthHeat;
        /* 0x2D48 */ public float AlwaysOnHazardStrengthRad;
        /* 0x2D4C */ public float AlwaysOnHazardStrengthCold;
        /* 0x2D50 */ public float AlwaysOnHazardMultiplierTox;
        /* 0x2D54 */ public float AlwaysOnHazardMultiplierHeat;
        /* 0x2D58 */ public float AlwaysOnHazardMultiplierRad;
        /* 0x2D5C */ public float AlwaysOnHazardMultiplierCold;
        /* 0x2D60 */ public float HazardPulseRate;
                     [NMS(Size = 0x06, EnumValue = new[] { "None", "NoOxygen", "ExtremeHeat", "ExtremeCold", "ToxicGas", "Radiation" })]
        /* 0x2D64 */ public NMSString0x80[] HazardTextures;
                     [NMS(Size = 0x06, EnumValue = new[] { "None", "NoOxygen", "ExtremeHeat", "ExtremeCold", "ToxicGas", "Radiation" })]
        /* 0x3064 */ public NMSString0x80[] HazardNormalMaps;
                     [NMS(Size = 0x06, EnumValue = new[] { "None", "NoOxygen", "ExtremeHeat", "ExtremeCold", "ToxicGas", "Radiation" })]
        /* 0x3364 */ public NMSString0x80[] HazardHeightmaps;
        /* 0x3664 */ public float IconPulseRate;
                     [NMS(Size = 0x08, Ignore = true)]
        /* 0x3668 */ public byte[] Padding3668;
        /* 0x3670 */ public Colour EnergyBgColour;
        /* 0x3680 */ public Colour EnergyBgPulseColour;
        /* 0x3690 */ public Colour HazardBgPulseColour;
        /* 0x36A0 */ public Colour HazardDamagePulseColour;
        /* 0x36B0 */ public Colour ShieldColour;
        /* 0x36C0 */ public Colour ShieldDamageColour;
        /* 0x36D0 */ public Colour ShieldBgColour;
        /* 0x36E0 */ public Colour ShieldDamageBgColour;
        /* 0x36F0 */ public Vector2f ScanLabelOffset;
        /* 0x36F8 */ public Vector2f InteractionLabelOffset;
        /* 0x3700 */ public Vector2f InteractionLabelOffset_1;
        /* 0x3708 */ public Vector2f InteractionLabelSize;
        /* 0x3710 */ public Vector2f InteractionLabelLineOffset;
        /* 0x3718 */ public float InteractionLabelRadiusScaler;
        /* 0x371C */ public float InteractionLabelHeight;
        /* 0x3720 */ public float InteractionLabelLineAlpha;
        /* 0x3724 */ public float InteractionIconInnerRadius;
        /* 0x3728 */ public float InteractionIconOuterRadius;
        /* 0x372C */ public float InteractionLabelPixelHeightMin;
        /* 0x3730 */ public float InteractionLabelPixelHeightMax;
        /* 0x3734 */ public float ScanTime;
                     [NMS(Size = 0x08, Ignore = true)]
        /* 0x3738 */ public byte[] Padding3738;
        /* 0x3740 */ public GcModelViewCollection ModelViews;
        /* 0x4660 */ public Colour CursorColour;
        /* 0x4670 */ public Colour CursorConfirmColour;
        /* 0x4680 */ public Colour CursorDeleteColour;
        /* 0x4690 */ public float CursorHoverSlowFactor;
        /* 0x4694 */ public float FrontendBGAlpha;
        /* 0x4698 */ public float FrontendConfirmTimeMouseMultiplier;
        /* 0x469C */ public float FrontendConfirmTimeFast;
        /* 0x46A0 */ public float FrontendConfirmTime;
        /* 0x46A4 */ public TkCurveType FrontendConfirmCurve;
        /* 0x46A8 */ public float FrontendCursorSize;
        /* 0x46AC */ public float FrontendCursorOffset;
        /* 0x46B0 */ public float PopupXClampOffset;
        /* 0x46B4 */ public float PopupSlotWidthOffset;
        /* 0x46B8 */ public float FrontendCursorWidth;
        /* 0x46BC */ public float FrontendDeactivateTime;
        /* 0x46C0 */ public float FrontendDeactivateSplit;
        /* 0x46C4 */ public float FrontendActivateTime;
        /* 0x46C8 */ public float FrontendActivateSplit;
        /* 0x46CC */ public float FrontendStatCircleWidth;
        /* 0x46D0 */ public float FrontendStatCircleWidthExtra;
        /* 0x46D4 */ public float FrontendBootTime;
        /* 0x46D8 */ public float FrontendBootBarTime;
        /* 0x46DC */ public TkCurveType FrontendBootBarCurve;
        /* 0x46E0 */ public float PopupDebounceTime;
        /* 0x46E4 */ public float PopupActivateTime;
        /* 0x46E8 */ public float PopupDeactivateTime;
        /* 0x46EC */ public TkCurveType PopupActivateCurve1;
        /* 0x46F0 */ public TkCurveType PopupActivateCurve2;
        /* 0x46F4 */ public float HatchPulseSpeed;
        /* 0x46F8 */ public float HatchPulseWidth;
        /* 0x46FC */ public float HatchPulsePauseTime;
        /* 0x4700 */ public int HatchCount;
        /* 0x4704 */ public float HatchCursorRadius;
        /* 0x4708 */ public float HatchAlphaMain;
        /* 0x470C */ public float HatchAlphaBase;
        /* 0x4710 */ public float HatchAlphaCursor;
        /* 0x4714 */ public float FrontendDoFNearPlaneMin;
        /* 0x4718 */ public float FrontendDoFNearPlaneMax;
        /* 0x471C */ public float FrontendDoFFarPlaneMin;
        /* 0x4720 */ public float FrontendDoFFarPlaneMax;
        /* 0x4724 */ public float FrontendDoFFarPlaneFadeMin;
        /* 0x4728 */ public float FrontendDoFFarPlaneFadeMax;
        /* 0x472C */ public float FrontendDoFBlurMultiplier;
        /* 0x4730 */ public bool FrontendDoFEnableBokeh;
                     [NMS(Size = 0x03, Ignore = true)]
        /* 0x4731 */ public byte[] Padding4731;
        /* 0x4734 */ public TkCurveType FrontendDoFCurve;
        /* 0x4738 */ public float FrontendShineSpeed;
        /* 0x473C */ public float FrontendToolbarTextHeight;
        /* 0x4740 */ public float FrontendToolbarTextHeightSelected;
        /* 0x4744 */ public float FrontendTitleFontSpacing;
        /* 0x4748 */ public float NGuiPadSensitivity;
        /* 0x474C */ public float NGuiMouseSensitivity;
        /* 0x4750 */ public Vector2f NGuiTouchPadSensitivity;
                     [NMS(Size = 0x08, Ignore = true)]
        /* 0x4758 */ public byte[] Padding4758;
        /* 0x4760 */ public Colour TargetMarkerColour;
        /* 0x4770 */ public Colour TargetMarkerHighlightColour;
        /* 0x4780 */ public float TargetMarkerScaleStart;
        /* 0x4784 */ public float TargetMarkerScaleEnd;
        /* 0x4788 */ public float TargetMarkerFadeAngleMin;
        /* 0x478C */ public float TargetMarkerFadeAngleRange;
        /* 0x4790 */ public float HitMarkerPulseSize;
        /* 0x4794 */ public float HitMarkerPulseTime;
                     [NMS(Size = 0x08, Ignore = true)]
        /* 0x4798 */ public byte[] Padding4798;
        /* 0x47A0 */ public Colour WantedColour;
        /* 0x47B0 */ public float PlanetPoleMaxDotProduct;
        /* 0x47B4 */ public float SpaceMapFoV;
        /* 0x47B8 */ public float SpaceMapAspectRatio;
        /* 0x47BC */ public float SpaceMapDistanceScale;
        /* 0x47C0 */ public float SpaceMapDistanceLogScaler;
        /* 0x47C4 */ public float SpaceMapScaleMin;
        /* 0x47C8 */ public float SpaceMapScaleRangeMin;
        /* 0x47CC */ public float SpaceMapScaleRangeMax;
        /* 0x47D0 */ public float SpaceMapObjectScale;
        /* 0x47D4 */ public float SpaceMapFreighterScale;
        /* 0x47D8 */ public float SpaceMapStationScale;
        /* 0x47DC */ public float SpaceMapPlanetScale;
        /* 0x47E0 */ public float SpaceMapMoonScale;
        /* 0x47E4 */ public float SpaceMapShipScale;
        /* 0x47E8 */ public float SpaceMapOtherPlayerScale;
        /* 0x47EC */ public float SpaceMapActionScale;
        /* 0x47F0 */ public float SpaceMapPlayerScale;
        /* 0x47F4 */ public float SpaceMapMarkerScale;
        /* 0x47F8 */ public float SpaceMapDistance;
        /* 0x47FC */ public float SpaceMapDistanceMultiplier;
        /* 0x4800 */ public float SpaceMapHorizonThickness;
        /* 0x4804 */ public float SpaceMapFadeAngleMin;
        /* 0x4808 */ public float SpaceMapFadeAngleMax;
        /* 0x480C */ public float SpaceMapCamHeight;
        /* 0x4810 */ public float SpaceMapCamAngle;
        /* 0x4814 */ public float SpaceMapCamDistance;
        /* 0x4818 */ public float SpaceMapShipScaleMin;
        /* 0x481C */ public float SpaceMapLightPitch;
        /* 0x4820 */ public float SpaceMapLightYaw;
                     [NMS(Size = 0x0C, Ignore = true)]
        /* 0x4824 */ public byte[] Padding4824;
        /* 0x4830 */ public Vector4f SpaceMapPosScaler;
        /* 0x4840 */ public Colour SpaceMapAttackColour;
        /* 0x4850 */ public Colour SpaceMapOtherPlayerColour;
        /* 0x4860 */ public Colour SpaceMapThreatColour;
        /* 0x4870 */ public Colour SpaceMapNeutralColour;
        /* 0x4880 */ public Colour SpaceMapDeathPointColour;
        /* 0x4890 */ public GcSpaceMapObjectData SpaceMapMarkerData;
        /* 0x48C0 */ public GcSpaceMapObjectData SpaceMapPlanetData;
        /* 0x48F0 */ public GcSpaceMapObjectData SpaceMapStationData;
        /* 0x4920 */ public GcSpaceMapObjectData SpaceMapShipData;
        /* 0x4950 */ public GcSpaceMapObjectData SpaceMapFreighterData;
        /* 0x4980 */ public Vector2f HUDTargetHealthOffset;
        /* 0x4988 */ public Vector2f HUDTargetHealthSize;
        /* 0x4990 */ public Vector2f HUDTargetHealthIconOffset;
        /* 0x4998 */ public float HUDTargetHealthIconSize;
        /* 0x499C */ public float HUDTargetHealthDangerTime;
        /* 0x49A0 */ public float HUDTargetMarkerOffset;
        /* 0x49A4 */ public float HUDTargetMarkerSize;
        /* 0x49A8 */ public float HUDTargetIconOffset;
        /* 0x49AC */ public float HUDTargetIconSize;
        /* 0x49B0 */ public float HUDMarkerOffset;
                     [NMS(Size = 0x0C, Ignore = true)]
        /* 0x49B4 */ public byte[] Padding49B4;
        /* 0x49C0 */ public Colour HUDMarkerColour;
        /* 0x49D0 */ public Colour HUDSpaceshipColour;
        /* 0x49E0 */ public Colour HUDRelicMarkerColourDiscovered;
        /* 0x49F0 */ public Colour HUDRelicMarkerColourUnknown;
        /* 0x4A00 */ public Colour HUDOutpostColour;
        /* 0x4A10 */ public Vector2f HUDMarkerPrimaryIndicatorOffset;
        /* 0x4A18 */ public Vector2f HUDMarkerCompassPrimaryIndicatorOffset;
        /* 0x4A20 */ public NMSString0x100 HUDMarkerIcon;
        /* 0x4B20 */ public NMSString0x100 HUDMarkerPrimaryIndicatorIcon;
        /* 0x4C20 */ public NMSString0x100 HUDMarkerColourIcon;
        /* 0x4D20 */ public NMSString0x100 HUDPointIcon;
        /* 0x4E20 */ public NMSString0x100 HUDSpaceshipIcon;
        /* 0x4F20 */ public NMSString0x100 HUDSaveIcon;
        /* 0x5020 */ public NMSString0x100 HUDDeathPointIcon;
        /* 0x5120 */ public NMSString0x100 HUDHexAnimIcon;
        /* 0x5220 */ public NMSString0x100 HUDCircleAnimIcon;
        /* 0x5320 */ public float HUDMarkerAnimSpeed;
        /* 0x5324 */ public float HUDMarkerAnimScale;
        /* 0x5328 */ public float HUDMarkerAnimOffset;
        /* 0x532C */ public float HUDMarkerAnimLoopTime;
        /* 0x5330 */ public TkCurveType HUDMarkerAnimAlphaCurve;
        /* 0x5334 */ public TkCurveType HUDMarkerAnimCurve;
        /* 0x5338 */ public float HUDMarkerPrimaryIndicatorSize;
        /* 0x533C */ public float HUDMarkerHoverAngleTestGround;
        /* 0x5340 */ public float HUDMarkerWideHoverAngleTest;
        /* 0x5344 */ public float HUDMarkerHoverAngleTestShip;
        /* 0x5348 */ public float HUDMarkerShipOffsetMaxDist;
        /* 0x534C */ public float HUDMarkerShipOffsetMinDist;
        /* 0x5350 */ public float HUDMarkerNearFadeDistance;
        /* 0x5354 */ public float HUDMarkerNearFadeRange;
        /* 0x5358 */ public float HUDMarkerFarDistance;
        /* 0x535C */ public float HUDMarkerFarFadeRange;
        /* 0x5360 */ public float HUDMarkerScalerMin;
        /* 0x5364 */ public float HUDMarkerScalerRange;
        /* 0x5368 */ public float HUDMarkerScalerSizeMin;
        /* 0x536C */ public float HUDMarkerScalerSizeMax;
        /* 0x5370 */ public float HUDMarkerHorizonBlendRange;
        /* 0x5374 */ public float HUDMarkerAlpha;
        /* 0x5378 */ public float HUDMarkerModelFadeRange;
        /* 0x537C */ public float HUDMarkerModelFadeMinHeight;
        /* 0x5380 */ public float HUDMarkerShowActualIconDistance;
        /* 0x5384 */ public float HUDMarkerShowActualSpaceIconDistance;
        /* 0x5388 */ public float HUDMarkerActiveTime;
        /* 0x538C */ public TkCurveType HUDMarkerActiveCurve;
        /* 0x5390 */ public float AltimeterResolution;
        /* 0x5394 */ public float AltimeterLineSpacing;
        /* 0x5398 */ public float AltimeterWidth;
        /* 0x539C */ public float AltimeterMin;
        /* 0x53A0 */ public float AltimeterMax;
        /* 0x53A4 */ public float AltimeterTextSize;
        /* 0x53A8 */ public float AltimeterMinValue;
                     [NMS(Size = 0x04, Ignore = true)]
        /* 0x53AC */ public byte[] Padding53AC;
        /* 0x53B0 */ public Colour AltimeterBandColour1;
        /* 0x53C0 */ public Colour AltimeterBandColour2;
        /* 0x53D0 */ public Colour AltimeterColour1;
        /* 0x53E0 */ public Colour AltimeterColour2;
        /* 0x53F0 */ public float LockOnMarkerSize;
        /* 0x53F4 */ public float LockOnMarkerSizeLock;
                     [NMS(Size = 0x08, Ignore = true)]
        /* 0x53F8 */ public byte[] Padding53F8;
        /* 0x5400 */ public Colour LockOnMarkerActiveColour;
        /* 0x5410 */ public float MissileIconAttackPulseTime;
        /* 0x5414 */ public float MissileIconAttackPulseAmount;
        /* 0x5418 */ public float NGuiModelRotationDegreesX;
        /* 0x541C */ public float NGuiModelRotationDegreesY;
        /* 0x5420 */ public float NGuiModelRotationDegreesZ;
        /* 0x5424 */ public float NGuiModelViewDistanceGlobal;
        /* 0x5428 */ public float NGuiModelViewDistanceSuitPage;
        /* 0x542C */ public float NGuiModelViewDistanceWeaponPage;
        /* 0x5430 */ public float NGuiModelViewDistanceShipPage;
        /* 0x5434 */ public float NGuiModelViewDistanceDiscoveryPage;
        /* 0x5438 */ public float NGuiModelViewFov;
        /* 0x543C */ public float NGuiModelViewCdSmoothTime;
        /* 0x5440 */ public float NGuiAltPlacementDistanceScrollSpeed;
        /* 0x5444 */ public float NGuiPlacementAngleScrollSpeed;
        /* 0x5448 */ public float NGuiModelViewFractionOfBBHeightAboveReflectivePlane;
                     [NMS(Size = 0x04, Ignore = true)]
        /* 0x544C */ public byte[] Padding544C;
        /* 0x5450 */ public Vector4f NGuiModelTranslationFactors;
        /* 0x5460 */ public Vector4f NGuiModelTranslationFactorsInteraction;
        /* 0x5470 */ public Vector4f NGuiThumbnailModelTranslationFactors;
        /* 0x5480 */ public float NGuiThumbnailModelRotationDegreesY;
        /* 0x5484 */ public float NGuiThumbnailModelViewDistance;
        /* 0x5488 */ public float NGuiCursorOffsetMultiplier;
        /* 0x548C */ public float NGuiActiveAreaOffsetTime;
        /* 0x5490 */ public Vector2f NGuiMin2DParallax;
        /* 0x5498 */ public Vector2f NGuiMax2DParallax;
        /* 0x54A0 */ public Vector2f NGuiModelParallax;
        /* 0x54A8 */ public Vector2f NGuiShipInteractParallax;
        /* 0x54B0 */ public Vector2f InteractionWorldParallax;
        /* 0x54B8 */ public float TargetParallaxMouseMultiplier;
        /* 0x54BC */ public float TargetParallaxMaintenancePageMultiplier;
        /* 0x54C0 */ public float NGuiModelViewFadeInAfterRenderTime;
        /* 0x54C4 */ public TkCurveType NGuiModelViewFadeInAfterRenderCurve;
        /* 0x54C8 */ public bool NGuiUseSeparateLayersForModelAndReflection;
                     [NMS(Size = 0x03, Ignore = true)]
        /* 0x54C9 */ public byte[] Padding54C9;
        /* 0x54CC */ public GcDiscoveryHelperTimings DiscoveryHelperTimings;
        /* 0x54D8 */ public GcHUDStartupTable IntroTiming;
        /* 0x5558 */ public GcInventorySlotActionData InstallTechSlotAction;
        /* 0x5574 */ public GcInventorySlotActionData BuildProductSlotAction;
        /* 0x5590 */ public GcInventorySlotActionData ChargeSlotAction;
        /* 0x55AC */ public GcInventorySlotActionData RepairSlotAction;
        /* 0x55C8 */ public GcInventorySlotActionData NewSlotRevealAction;
        /* 0x55E4 */ public GcInventorySlotActionData NewSlotPulseAction;
        /* 0x5600 */ public float ReportBaseFlashTime;
        /* 0x5604 */ public float ReportBaseFlashIntensity;
        /* 0x5608 */ public float ReportBaseFlashDelay;
        /* 0x560C */ public int ReportBaseTexWidth;
        /* 0x5610 */ public int ReportBaseTexHeight;
        /* 0x5614 */ public float ReportCameraSpeed;
        /* 0x5618 */ public float AmbientModeFadeTime;
        /* 0x561C */ public bool HideQuickMenuControls;
        /* 0x561D */ public bool QuickMenuAllowCycle;
                     [NMS(Size = 0x02, Ignore = true)]
        /* 0x561E */ public byte[] Padding561E;
        /* 0x5620 */ public float TextChatMaxDisplayTime;
        /* 0x5624 */ public float TextChatStayBigAfterTextInput;
        /* 0x5628 */ public int BuildingShopMaxItems;
                     [NMS(Size = 0x04, Ignore = true)]
        /* 0x562C */ public byte[] Padding562C;
    }
}